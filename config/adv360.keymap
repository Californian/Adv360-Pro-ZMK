
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp DELETE  &kp N1    &kp N2    &kp N3     &kp N4  &kp N5                     &mo 3                                                                               &mo 3  &kp N6      &kp N7     &kp N8    &kp N9     &kp N0   &kp PRINTSCREEN
   &kp RALT   &kp Q     &kp W     &kp E      &kp R   &kp T                    &tog 2                                                                              &tog 1   &kp Y       &kp U      &kp I     &kp O  &kp MINUS          &kp RALT
  &kp EQUAL   &kp A     &kp S     &kp D      &kp F   &kp G                    &tog 1  &kp PAGE_UP  &kp PAGE_DOWN                           &kp END   &kp HOME     &tog 2   &kp H       &kp J      &kp K     &kp L   &kp SEMI  &kp SINGLE_QUOTE
  &kp GRAVE   &kp Z     &kp X     &kp C      &kp V   &kp B                     &none        &none   &kp LEFT_ALT   &none   &none     &kp RIGHT_WIN      &none      &none   &kp N       &kp M  &kp COMMA   &kp DOT  &kp SLASH     &kp BACKSLASH
      &mo 2  &kp UP  &kp DOWN  &kp LEFT  &kp RIGHT                    &kp LEFT_SHIFT     &kp BSPC        &kp TAB                  &kp LEFT_CONTROL  &kp ENTER  &kp SPACE          &kp ESCAPE      &kp P  &kp LBKT   &kp RBKT             &mo 2
            >;
        };

        layer_keypad {
            bindings = <
  &none    &kp KP_NUM  &kp KP_SLASH  &kp KP_MULTIPLY  &kp KP_EQUAL  &kp KP_COMMA                      &mo 3                                                                                                &mo 3  &kp KP_COMMA  &kp KP_EQUAL  &kp KP_MULTIPLY  &kp KP_SLASH    &kp KP_NUM   &none
  &none  &kp KP_MINUS     &kp KP_N9        &kp KP_N8     &kp KP_N7       &kp ESC                     &tog 0                                                                                               &tog 0       &kp ESC     &kp KP_N7        &kp KP_N8     &kp KP_N9  &kp KP_MINUS   &none
  &none   &kp KP_PLUS     &kp KP_N6        &kp KP_N5     &kp KP_N4        &kp UP                     &tog 2  &kp LEFT_BRACKET  &kp RIGHT_BRACKET                  &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &tog 2        &kp UP     &kp KP_N4        &kp KP_N5     &kp KP_N6   &kp KP_PLUS   &none
  &mo 2   &kp KP_LPAR     &kp KP_N3        &kp KP_N2     &kp KP_N1      &kp DOWN                      &none             &none       &kp KP_CLEAR   &none   &none      &kp KP_CLEAR              &none      &none      &kp DOWN     &kp KP_N1        &kp KP_N2     &kp KP_N3   &kp KP_LPAR   &mo 2
  &mo 0   &kp KP_RPAR    &kp KP_DOT         &kp LEFT     &kp RIGHT                          &kp KP_NUMBER_0      &kp KP_ENTER           &kp BSPC                     &kp BACKSPACE       &kp KP_ENTER  &kp KP_N0                    &kp LEFT        &kp RIGHT    &kp KP_DOT   &kp KP_RPAR   &mo 0
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2         &kp F3           &kp F4         &kp F5  &kp F6                 &mo 3                                                                           &mo 3  &kp F7                  &kp F8              &kp F9       &kp F10  &kp F11  &kp F12
 &trans  &trans         &trans    &kp C_BRI_MIN  &kp C_BRI_MAX  &trans                &tog 1                                                                          &tog 0  &trans  &kp C_BACKLIGHT_TOGGLE     &kp PRINTSCREEN        &trans   &trans   &trans
 &trans  &trans  &kp C_SHUFFLE  &kp C_VOLUME_UP   &kp C_VOL_DN  &trans                &tog 0      &trans  &trans                  &trans            &trans            &tog 1  &trans          &kp C_PREVIOUS          &kp C_NEXT  &kp C_REPEAT   &trans   &trans
 &trans  &trans         &trans     &kp C_BRI_DN   &kp C_BRI_UP  &trans                 &none       &none  &trans   &none   &none  &trans             &none             &none  &trans            &kp C_REWIND  &kp C_FAST_FORWARD        &trans   &trans   &trans
 &trans  &trans         &trans           &trans         &trans                    &kp C_MUTE  &kp C_MENU  &trans                  &trans  &kp C_MEDIA_HOME  &kp C_PLAY_PAUSE                          &trans              &trans        &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none                  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

    };
};
